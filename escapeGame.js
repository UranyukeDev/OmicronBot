const Discord = require("discord.js");

const WIDTH = 13;
const HEIGHT = 13;

class EscapeGame
{
	constructor()
	{
		this.advice = "";
		this.userID;
		this.gameMap = [];
		this.gameEmbed = null;
		this.inGame = false;
		this.level = 1;
		this.key;
	}

	generateLevel()
	{
		this.advice = "*no info*";
		this.key = false;
		switch(this.level) //­ЪЪФ, РџФ, ­ЪЉц, ­ЪЉ╗, ­Ъџф, ­ЪћЦ, ­ЪЊд, ­ЪћЉ, ­Ъћњ
		{
			case 1:
				this.advice = "­ЪЉ╗ -> Ghosts move in random direction you have to avoid touching them.";
				this.gameMap = [
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЉ╗','РџФ','­ЪЪФ','РџФ','­ЪЉц','РџФ','­ЪЪФ','РџФ','­ЪЉ╗','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','­Ъџф','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',]
				]; break;
			case 2:
				this.advice = "­ЪћЦ -> Fire works like walls but when you enter it you will die unlike the wall which pushes you back.";
				this.gameMap = [
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЉц','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪЉ╗','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪЉ╗','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЉ╗','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­Ъџф','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',]
				]; break;
			case 3:
				this.gameMap = [
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','­ЪћЦ','­ЪЉ╗','РџФ','­ЪћЦ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЉц','РџФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','­ЪЉ╗','­Ъџф','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪћЦ','РџФ','­ЪЉ╗','­ЪћЦ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',]
				]; break;
			case 4:
				this.advice = "­ЪЊд -> Boxes can be pushed by the player.";
				this.gameMap = [
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЊд','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪћЦ','­ЪЉц','­ЪћЦ','­ЪЪФ','РџФ','РџФ','­ЪЊд','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪћЦ','РџФ','­ЪћЦ','­ЪЪФ','РџФ','­ЪЪФ','­Ъџф','­ЪЪФ','­ЪћЦ','РџФ','­ЪћЦ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪћЦ','РџФ','­ЪћЦ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪћЦ','РџФ','­ЪћЦ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪћЦ','РџФ','­ЪћЦ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','­ЪћЦ','РџФ','­ЪћЦ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЊд','РџФ','РџФ','­ЪЊд','РџФ','­ЪЊд','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЊд','РџФ','­ЪЊд','РџФ','РџФ','­ЪЊд','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',]
				]; break;
			case 5:
				this.gameMap = [
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЊд','РџФ','­ЪЊд','РџФ','­ЪЊд','­ЪЊд','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','­ЪЊд','РџФ','­ЪЊд','РџФ','­ЪЊд','­ЪЊд','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЊд','РџФ','­ЪЊд','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЉ╗','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЊд','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЊд','­ЪЊд','­ЪЊд','­ЪЪФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ','РџФ','РџФ','­ЪЊд','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ','­ЪЊд','­ЪЊд','­ЪЊд','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЉ╗','РџФ','­ЪЪФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ','­ЪћЦ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЉц','РџФ','­ЪЪФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ','РџФ','­Ъџф','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',]
				]; break;
			case 6:
				this.advice = "­ЪћЉ -> The key allows the player to unlock a door.";
				this.gameMap = [
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','РџФ','­ЪЪФ','РџФ','­Ъџф','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','­Ъћњ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЉ╗','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','­ЪЉ╗','­ЪЪФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','РџФ','­ЪЪФ','­ЪЊд','­ЪЪФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЊд','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪћЉ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪћЦ','­ЪЉ╗','РџФ','РџФ','­ЪЉ╗','РџФ','­ЪЉц','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',]
				]; break;
			case 7:
				this.gameMap = [
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЉц','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪћЦ','РџФ','РџФ','­ЪЉ╗','­ЪћЦ','РџФ','РџФ','­ЪЉ╗','­ЪћЦ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЉ╗','­ЪћЦ','РџФ','РџФ','­ЪЉ╗','­ЪћЦ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪћЦ','РџФ','РџФ','­ЪЉ╗','­ЪћЦ','РџФ','РџФ','­ЪЉ╗','­ЪћЦ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','РџФ','­ЪћЦ','­Ъџф','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',]
				]; break;
			case 8:
				this.advice = "­ЪДа -> Here you are going to need to use your brain.";
				this.gameMap = [
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЉц','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪћЦ','­ЪЪФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЊд','­ЪЊд','­ЪЊд','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЊд','РџФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪћЦ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЊд','­ЪЊд','РџФ','РџФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','РџФ','РџФ','­ЪЊд','РџФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','­ЪћЦ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­Ъћњ','­ЪЊд','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪћЦ','­ЪЉ╗','РџФ','РџФ','­ЪћЉ','­ЪЪФ','РџФ','­Ъџф','РџФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',]
				]; break;
			case 9:
				this.gameMap = [
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','­ЪЊд','РџФ','­ЪЊд','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЊд','­ЪЪФ','РџФ','­ЪЪФ','РџФ','­ЪЉ╗','РџФ','­ЪЪФ','­ЪћЉ','­ЪЪФ','­ЪЊд','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ','­ЪЊд','­Ъћњ','­ЪЊд','­ЪЪФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЪФ','­ЪЊд','­ЪћЦ','­ЪЊд','РџФ','РџФ','­ЪћЦ','РџФ','­ЪЪФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЪФ','РџФ','РџФ','­ЪЊд','­ЪЊд','­ЪЊд','РџФ','РџФ','­ЪЪФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЪФ','­ЪЊд','­ЪЊд','­ЪЊд','РџФ','РџФ','­ЪЊд','­ЪЊд','­ЪЪФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','­ЪЪФ','­ЪЉц','РџФ','­ЪЊд','РџФ','РџФ','­ЪЊд','РџФ','­ЪЪФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','­Ъџф','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',]
				]; break;
			case 10:
				this.gameMap = [
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЉц','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','РџФ','­ЪЪФ',],
				['­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ','­ЪЪФ',]
				]; break;
		}
	}

	convertToString()
	{
		let str = "";
		for(var i = 0; i < WIDTH; i++)
		{
			for(var j = 0; j < HEIGHT; j++)
			{
				str += this.gameMap[i][j];
			}
			str += "\n";
		}

		return str;
	}

	newGame(message)
	{	
		if (this.inGame)
    	{
        	message.channel.send(":confused: oops, looks like someone is already playing escape game. Why don't you try another game in the meantime?");
        	return;
    	}

    	this.userID = message.author.id;
    	this.inGame = true;
    	this.level = 1;
    	this.advice = "";
    	this.key = false;

    	this.generateLevel();

    	const embed = new Discord.MessageEmbed()
        	.setColor("#000066")
        	.setTitle("Escape Game")
        	.setDescription("**Level :** " + this.level + "\n\n" + this.advice + "\n\n" + this.convertToString())
        	.setTimestamp();

        message.channel.send(embed).then(emsg =>
    	{
        	this.gameEmbed = emsg;
        	this.gameEmbed.react('Ргє');
        	this.gameEmbed.react('РгЁ№ИЈ');
        	this.gameEmbed.react('РъА№ИЈ');
        	this.gameEmbed.react('РгЄ');
        	this.gameEmbed.react('­Ъћё');

        	this.waitForReaction();
    	});
	}

	moveGhosts()
	{
		let gx = [];
		let gy = [];
		for(var i = 0; i < WIDTH; i++)
		{
			for(var j = 0; j < HEIGHT; j++)
			{
				if(this.gameMap[i][j] == '­ЪЉ╗')
				{
					let rnd = Math.floor(Math.random() * 4);
					switch(rnd)
					{
						case 0: //left
							if(this.gameMap[i][j-1] == 'РџФ')
							{
								this.gameMap[i][j] = 'РџФ';
								gx.push(j-1);
								gy.push(i);
							} break;
						case 1: //right
							if(this.gameMap[i][j+1] == 'РџФ')
							{
								this.gameMap[i][j] = 'РџФ';
								gx.push(j+1);
								gy.push(i);
							} break;
						case 2: //up
							if(this.gameMap[i-1][j] == 'РџФ')
							{
								this.gameMap[i][j] = 'РџФ';
								gx.push(j);
								gy.push(i-1);
							} break;
						case 3: //down
							if(this.gameMap[i+1][j] == 'РџФ')
							{
								this.gameMap[i][j] = 'РџФ';
								gx.push(j);
								gy.push(i+1);
							} break;
					}
				} else if(this.gameMap[i][j] == '­Ъћњ')
				{
					if(this.key == true)
					{
						this.gameMap[i][j] = 'РџФ';
					}
				}
			}
		}

		for(var i = 0; i < gx.length; i++)
		{
			this.gameMap[gy[i]][gx[i]] = '­ЪЉ╗';
		}
	}

	step()
	{
		const editEmbed = new Discord.MessageEmbed()
	        .setColor("#000066")
	        .setTitle("Escape Game")
	        .setDescription("**Level :** " + this.level + "\n\n" + this.advice + "\n\n" + this.convertToString())
	        .setTimestamp();
	    this.gameEmbed.edit(editEmbed);

	    this.waitForReaction();
	}

	gameOver()
	{
		this.inGame = false;
    	const editEmbed = new Discord.MessageEmbed()
        	.setColor("#000066")
        	.setTitle("Escape Game")
        	.setDescription("GAME OVER!\nLEVELS COMPLETED: " + this.level)
        	.setTimestamp();
    	this.gameEmbed.edit(editEmbed);
    	this.gameEmbed.reactions.removeAll();
	}

	filter(reaction, user)
	{
		return ['Ргє', 'РгЁ№ИЈ', 'РъА№ИЈ', 'РгЄ', '­Ъћё'].includes(reaction.emoji.name) && user.id !== this.gameEmbed.author.id;
	}

	waitForReaction()
	{
		let x, y;
		for(var i = 0; i < WIDTH; i++)
		{
			for(var j = 0; j < HEIGHT; j++)
			{
				if(this.gameMap[i][j] == '­ЪЉц')
				{
					y = i;
					x = j;
				}
			}
		}
		this.moveGhosts();
		this.gameEmbed.awaitReactions((reaction, user) => this.filter(reaction, user), { max: 1, time: 60000, errors: ["time"] })
	        .then(collected => 
	        {
	            const reaction = collected.first();
	            let dead = false;

	            if (reaction.emoji.name === 'РгЁ№ИЈ') //LEFT
	            {
	                if(this.gameMap[y][x-1] == 'РџФ')
	                {
	                	this.gameMap[y][x] = 'РџФ';
	                	this.gameMap[y][x-1] = '­ЪЉц';
	                } else if(this.gameMap[y][x-1] == '­ЪЪФ')
	                {
	                	this.gameMap[y][x] = '­ЪЉц';
	                } else if(this.gameMap[y][x-1] == '­Ъџф')
	                {
	                	this.level++;
	                	this.generateLevel();
	                } else if(this.gameMap[y][x-1] == '­ЪЉ╗')
	                {
	                	this.gameOver(); dead = true;
	                } else if(this.gameMap[y][x-1] == '­ЪћЦ')
	                {
	                	this.gameOver(); dead = true;
	                } else if(this.gameMap[y][x-1] == '­ЪЊд')
	                {
	                	if(this.gameMap[y][x-2] == 'РџФ')
	                	{
	                		this.gameMap[y][x] = 'РџФ';
	                		this.gameMap[y][x-1] = '­ЪЉц';
	                		this.gameMap[y][x-2] = '­ЪЊд';
	                	} else
	                	{
	                		this.gameMap[y][x] = '­ЪЉц';
	                	}
	                } else if(this.gameMap[y][x-1] == '­Ъћњ')
	                {
	                	this.gameMap[y][x] = '­ЪЉц';
	                } else if(this.gameMap[y][x-1] == '­ЪћЉ')
	                {
	                	this.gameMap[y][x] = 'РџФ';
	                	this.gameMap[y][x-1] = '­ЪЉц';
	                	this.key = true;
	                }
	            } else if (reaction.emoji.name === 'РъА№ИЈ') //RIGHT
	            {
	                if(this.gameMap[y][x+1] == 'РџФ')
	                {
	                	this.gameMap[y][x] = 'РџФ';
	                	this.gameMap[y][x+1] = '­ЪЉц';
	                } else if(this.gameMap[y][x+1] == '­ЪЪФ')
	                {
	                	this.gameMap[y][x] = '­ЪЉц';
	                } else if(this.gameMap[y][x+1] == '­Ъџф')
	                {
	                	this.level++;
	                	this.generateLevel();
	                } else if(this.gameMap[y][x+1] == '­ЪЉ╗')
	                {
	                	this.gameOver(); dead = true;
	                } else if(this.gameMap[y][x+1] == '­ЪћЦ')
	                {
	                	this.gameOver(); dead = true;
	                } else if(this.gameMap[y][x+1] == '­ЪЊд')
	                {
	                	if(this.gameMap[y][x+2] == 'РџФ')
	                	{
	                		this.gameMap[y][x] = 'РџФ';
	                		this.gameMap[y][x+1] = '­ЪЉц';
	                		this.gameMap[y][x+2] = '­ЪЊд';
	                	} else
	                	{
	                		this.gameMap[y][x] = '­ЪЉц';
	                	}
	                } else if(this.gameMap[y][x+1] == '­Ъћњ')
	                {
	                	this.gameMap[y][x] = '­ЪЉц';
	                } else if(this.gameMap[y][x+1] == '­ЪћЉ')
	                {
	                	this.gameMap[y][x] = 'РџФ';
	                	this.gameMap[y][x+1] = '­ЪЉц';
	                	this.key = true;
	                }
	            } else if (reaction.emoji.name === 'Ргє') //UP
	            {
	            	if(this.gameMap[y-1][x] == 'РџФ')
	                {
	                	this.gameMap[y][x] = 'РџФ';
	                	this.gameMap[y-1][x] = '­ЪЉц';
	                } else if(this.gameMap[y-1][x] == '­ЪЪФ')
	                {
	                	this.gameMap[y][x] = '­ЪЉц';
	                } else if(this.gameMap[y-1][x] == '­Ъџф')
	                {
	                	this.level++;
	                	this.generateLevel();
	                } else if(this.gameMap[y-1][x] == '­ЪЉ╗')
	                {
	                	this.gameOver(); dead = true;
	                } else if(this.gameMap[y-1][x] == '­ЪћЦ')
	                {
	                	this.gameOver(); dead = true;
	                } else if(this.gameMap[y-1][x] == '­ЪЊд')
	                {
	                	if(this.gameMap[y-2][x] == 'РџФ')
	                	{
	                		this.gameMap[y][x] = 'РџФ';
	                		this.gameMap[y-1][x] = '­ЪЉц';
	                		this.gameMap[y-2][x] = '­ЪЊд';
	                	} else
	                	{
	                		this.gameMap[y][x] = '­ЪЉц';
	                	}
	                } else if(this.gameMap[y-1][x] == '­Ъћњ')
	                {
	                	this.gameMap[y][x] = '­ЪЉц';
	                } else if(this.gameMap[y-1][x] == '­ЪћЉ')
	                {
	                	this.gameMap[y][x] = 'РџФ';
	                	this.gameMap[y-1][x] = '­ЪЉц';
	                	this.key = true;
	                }
	            } else if (reaction.emoji.name === 'РгЄ') //DOWN
	            {
	            	if(this.gameMap[y+1][x] == 'РџФ')
	                {
	                	this.gameMap[y][x] = 'РџФ';
	                	this.gameMap[y+1][x] = '­ЪЉц';
	                } else if(this.gameMap[y+1][x] == '­ЪЪФ')
	                {
	                	this.gameMap[y][x] = '­ЪЉц';
	                } else if(this.gameMap[y+1][x] == '­Ъџф')
	                {
	                	this.level++;
	                	this.generateLevel();
	                } else if(this.gameMap[y+1][x] == '­ЪЉ╗')
	                {
	                	this.gameOver(); dead = true;
	                } else if(this.gameMap[y+1][x] == '­ЪћЦ')
	                {
	                	this.gameOver(); dead = true;
	                } else if(this.gameMap[y+1][x] == '­ЪЊд')
	                {
	                	if(this.gameMap[y+2][x] == 'РџФ')
	                	{
	                		this.gameMap[y][x] = 'РџФ';
	                		this.gameMap[y+1][x] = '­ЪЉц';
	                		this.gameMap[y+2][x] = '­ЪЊд';
	                	} else
	                	{
	                		this.gameMap[y][x] = '­ЪЉц';
	                	}
	                } else if(this.gameMap[y+1][x] == '­Ъћњ')
	                {
	                	this.gameMap[y][x] = '­ЪЉц';
	                } else if(this.gameMap[y+1][x] == '­ЪћЉ')
	                {
	                	this.gameMap[y][x] = 'РџФ';
	                	this.gameMap[y+1][x] = '­ЪЉц';
	                	this.key = true;
	                }
	            } else if (reaction.emoji.name === '­Ъћё') //restart level
	            {
	            	this.generateLevel();
	            }

	            reaction.users.remove(reaction.users.cache.filter(user => user.id !== this.gameEmbed.author.id).first().id).then(() =>
	            {
	            	if(dead == false)
	            	{
	            		this.step();
	            	}
	            });
	        })
	        .catch(collected => 
	        {
	        	console.log("timeout");
	            this.gameOver();
	        });
	}
}

module.exports = EscapeGame;
